from tkinter import filedialog



custom_backup_root=None

        """
        custom_backup_root: optional path chosen by the user.
        If None, backups will be saved beside the exe.
        """
        if getattr(sys, 'frozen', False):
            exe_dir = os.path.dirname(sys.executable)
        else:
            exe_dir = os.path.dirname(os.path.abspath(__file__))

        self.backup_root = custom_backup_root or os.path.join(exe_dir, "backups")
        os.makedirs(self.backup_root, exist_ok=True)







def backup_app_data(self, backup_root, db_filename="rems_database.db"):
        """
        Creates a timestamped backup of the database and data folder.
        Returns the path to the backup directory.
        """
        now = datetime.now().strftime("%d-%m-%Y_%H%M%S")
        backup_dir = os.path.join(backup_root, f"backup_{now}")
        os.makedirs(backup_dir, exist_ok=True)

        # --- Backup database ---
        db_file = os.path.join(DATA_DIR, db_filename)
        if os.path.exists(db_file):
            shutil.copy(db_file, os.path.join(backup_dir, db_filename))

        # --- Backup the entire data folder into a ZIP ---
        zip_path = os.path.join(backup_dir, f"data_backup_{now}.zip")
        with zipfile.ZipFile(zip_path, "w", zipfile.ZIP_DEFLATED) as zipf:
            for root, _, files in os.walk(DATA_DIR):
                for file in files:
                    file_path = os.path.join(root, file)
                    arcname = os.path.relpath(file_path, DATA_DIR)
                    zipf.write(file_path, arcname)

        logging.info(f"Backup created at {backup_dir}")
        return backup_dir


    
    def _manual_backup(self):
        try:
            # Ask the user where to save
            folder = filedialog.askdirectory(title="Select Backup Location")
            if not folder:  # user canceled
                return

            backup_path = self.backup_app_data(folder)  # pass chosen folder
            messagebox.showinfo("Backup Complete", f"Backup created at:\n{backup_path}")
        except Exception as e:
            self.logger.error(f"Manual backup failed: {e}")
            messagebox.showerror("Backup Failed", f"An error occurred while creating the backup:\n{e}")
